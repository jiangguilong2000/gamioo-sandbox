// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: skill.proto
// Protobuf Java Version: 4.32.0

package io.gamioo.sandbox.proto;

@com.google.protobuf.Generated
public final class Skill {
  private Skill() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      Skill.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SkillFire_S2C_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SkillFire_S2C_Msg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 attackerId = 1;</code>
     * @return The attackerId.
     */
    int getAttackerId();

    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    java.util.List<io.gamioo.sandbox.proto.Skill.Harm> 
        getHarmListList();
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    io.gamioo.sandbox.proto.Skill.Harm getHarmList(int index);
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    int getHarmListCount();
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    java.util.List<? extends io.gamioo.sandbox.proto.Skill.HarmOrBuilder> 
        getHarmListOrBuilderList();
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    io.gamioo.sandbox.proto.Skill.HarmOrBuilder getHarmListOrBuilder(
        int index);

    /**
     * <code>int32 index = 3;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <code>repeated int32 param1 = 4;</code>
     * @return A list containing the param1.
     */
    java.util.List<java.lang.Integer> getParam1List();
    /**
     * <code>repeated int32 param1 = 4;</code>
     * @return The count of param1.
     */
    int getParam1Count();
    /**
     * <code>repeated int32 param1 = 4;</code>
     * @param index The index of the element to return.
     * @return The param1 at the given index.
     */
    int getParam1(int index);

    /**
     * <code>string skillCategory = 5;</code>
     * @return The skillCategory.
     */
    java.lang.String getSkillCategory();
    /**
     * <code>string skillCategory = 5;</code>
     * @return The bytes for skillCategory.
     */
    com.google.protobuf.ByteString
        getSkillCategoryBytes();
  }
  /**
   * <pre>
   * 主消息体
   * </pre>
   *
   * Protobuf type {@code SkillFire_S2C_Msg}
   */
  public static final class SkillFire_S2C_Msg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SkillFire_S2C_Msg)
      SkillFire_S2C_MsgOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 32,
        /* patch= */ 0,
        /* suffix= */ "",
        SkillFire_S2C_Msg.class.getName());
    }
    // Use SkillFire_S2C_Msg.newBuilder() to construct.
    private SkillFire_S2C_Msg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SkillFire_S2C_Msg() {
      harmList_ = java.util.Collections.emptyList();
      param1_ = emptyIntList();
      skillCategory_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gamioo.sandbox.proto.Skill.internal_static_SkillFire_S2C_Msg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gamioo.sandbox.proto.Skill.internal_static_SkillFire_S2C_Msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.class, io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.Builder.class);
    }

    public static final int ATTACKERID_FIELD_NUMBER = 1;
    private int attackerId_ = 0;
    /**
     * <code>int32 attackerId = 1;</code>
     * @return The attackerId.
     */
    @java.lang.Override
    public int getAttackerId() {
      return attackerId_;
    }

    public static final int HARMLIST_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.gamioo.sandbox.proto.Skill.Harm> harmList_;
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.gamioo.sandbox.proto.Skill.Harm> getHarmListList() {
      return harmList_;
    }
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.gamioo.sandbox.proto.Skill.HarmOrBuilder> 
        getHarmListOrBuilderList() {
      return harmList_;
    }
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    @java.lang.Override
    public int getHarmListCount() {
      return harmList_.size();
    }
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    @java.lang.Override
    public io.gamioo.sandbox.proto.Skill.Harm getHarmList(int index) {
      return harmList_.get(index);
    }
    /**
     * <code>repeated .Harm harmList = 2;</code>
     */
    @java.lang.Override
    public io.gamioo.sandbox.proto.Skill.HarmOrBuilder getHarmListOrBuilder(
        int index) {
      return harmList_.get(index);
    }

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_ = 0;
    /**
     * <code>int32 index = 3;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }

    public static final int PARAM1_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList param1_ =
        emptyIntList();
    /**
     * <code>repeated int32 param1 = 4;</code>
     * @return A list containing the param1.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParam1List() {
      return param1_;
    }
    /**
     * <code>repeated int32 param1 = 4;</code>
     * @return The count of param1.
     */
    public int getParam1Count() {
      return param1_.size();
    }
    /**
     * <code>repeated int32 param1 = 4;</code>
     * @param index The index of the element to return.
     * @return The param1 at the given index.
     */
    public int getParam1(int index) {
      return param1_.getInt(index);
    }
    private int param1MemoizedSerializedSize = -1;

    public static final int SKILLCATEGORY_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object skillCategory_ = "";
    /**
     * <code>string skillCategory = 5;</code>
     * @return The skillCategory.
     */
    @java.lang.Override
    public java.lang.String getSkillCategory() {
      java.lang.Object ref = skillCategory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        skillCategory_ = s;
        return s;
      }
    }
    /**
     * <code>string skillCategory = 5;</code>
     * @return The bytes for skillCategory.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSkillCategoryBytes() {
      java.lang.Object ref = skillCategory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        skillCategory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (attackerId_ != 0) {
        output.writeInt32(1, attackerId_);
      }
      for (int i = 0; i < harmList_.size(); i++) {
        output.writeMessage(2, harmList_.get(i));
      }
      if (index_ != 0) {
        output.writeInt32(3, index_);
      }
      if (getParam1List().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(param1MemoizedSerializedSize);
      }
      for (int i = 0; i < param1_.size(); i++) {
        output.writeInt32NoTag(param1_.getInt(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(skillCategory_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, skillCategory_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (attackerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, attackerId_);
      }
      for (int i = 0; i < harmList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, harmList_.get(i));
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < param1_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(param1_.getInt(i));
        }
        size += dataSize;
        if (!getParam1List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        param1MemoizedSerializedSize = dataSize;
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(skillCategory_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, skillCategory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg)) {
        return super.equals(obj);
      }
      io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg other = (io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg) obj;

      if (getAttackerId()
          != other.getAttackerId()) return false;
      if (!getHarmListList()
          .equals(other.getHarmListList())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (!getParam1List()
          .equals(other.getParam1List())) return false;
      if (!getSkillCategory()
          .equals(other.getSkillCategory())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ATTACKERID_FIELD_NUMBER;
      hash = (53 * hash) + getAttackerId();
      if (getHarmListCount() > 0) {
        hash = (37 * hash) + HARMLIST_FIELD_NUMBER;
        hash = (53 * hash) + getHarmListList().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      if (getParam1Count() > 0) {
        hash = (37 * hash) + PARAM1_FIELD_NUMBER;
        hash = (53 * hash) + getParam1List().hashCode();
      }
      hash = (37 * hash) + SKILLCATEGORY_FIELD_NUMBER;
      hash = (53 * hash) + getSkillCategory().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 主消息体
     * </pre>
     *
     * Protobuf type {@code SkillFire_S2C_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SkillFire_S2C_Msg)
        io.gamioo.sandbox.proto.Skill.SkillFire_S2C_MsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gamioo.sandbox.proto.Skill.internal_static_SkillFire_S2C_Msg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gamioo.sandbox.proto.Skill.internal_static_SkillFire_S2C_Msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.class, io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.Builder.class);
      }

      // Construct using io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        attackerId_ = 0;
        if (harmListBuilder_ == null) {
          harmList_ = java.util.Collections.emptyList();
        } else {
          harmList_ = null;
          harmListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        param1_ = emptyIntList();
        skillCategory_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gamioo.sandbox.proto.Skill.internal_static_SkillFire_S2C_Msg_descriptor;
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg getDefaultInstanceForType() {
        return io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.getDefaultInstance();
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg build() {
        io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg buildPartial() {
        io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg result = new io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg result) {
        if (harmListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            harmList_ = java.util.Collections.unmodifiableList(harmList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.harmList_ = harmList_;
        } else {
          result.harmList_ = harmListBuilder_.build();
        }
      }

      private void buildPartial0(io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.attackerId_ = attackerId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.index_ = index_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          param1_.makeImmutable();
          result.param1_ = param1_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.skillCategory_ = skillCategory_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg) {
          return mergeFrom((io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg other) {
        if (other == io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg.getDefaultInstance()) return this;
        if (other.getAttackerId() != 0) {
          setAttackerId(other.getAttackerId());
        }
        if (harmListBuilder_ == null) {
          if (!other.harmList_.isEmpty()) {
            if (harmList_.isEmpty()) {
              harmList_ = other.harmList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHarmListIsMutable();
              harmList_.addAll(other.harmList_);
            }
            onChanged();
          }
        } else {
          if (!other.harmList_.isEmpty()) {
            if (harmListBuilder_.isEmpty()) {
              harmListBuilder_.dispose();
              harmListBuilder_ = null;
              harmList_ = other.harmList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              harmListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   internalGetHarmListFieldBuilder() : null;
            } else {
              harmListBuilder_.addAllMessages(other.harmList_);
            }
          }
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (!other.param1_.isEmpty()) {
          if (param1_.isEmpty()) {
            param1_ = other.param1_;
            param1_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensureParam1IsMutable();
            param1_.addAll(other.param1_);
          }
          onChanged();
        }
        if (!other.getSkillCategory().isEmpty()) {
          skillCategory_ = other.skillCategory_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                attackerId_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                io.gamioo.sandbox.proto.Skill.Harm m =
                    input.readMessage(
                        io.gamioo.sandbox.proto.Skill.Harm.parser(),
                        extensionRegistry);
                if (harmListBuilder_ == null) {
                  ensureHarmListIsMutable();
                  harmList_.add(m);
                } else {
                  harmListBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 24: {
                index_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int v = input.readInt32();
                ensureParam1IsMutable();
                param1_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParam1IsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  param1_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 42: {
                skillCategory_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int attackerId_ ;
      /**
       * <code>int32 attackerId = 1;</code>
       * @return The attackerId.
       */
      @java.lang.Override
      public int getAttackerId() {
        return attackerId_;
      }
      /**
       * <code>int32 attackerId = 1;</code>
       * @param value The attackerId to set.
       * @return This builder for chaining.
       */
      public Builder setAttackerId(int value) {

        attackerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 attackerId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        attackerId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.gamioo.sandbox.proto.Skill.Harm> harmList_ =
        java.util.Collections.emptyList();
      private void ensureHarmListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          harmList_ = new java.util.ArrayList<io.gamioo.sandbox.proto.Skill.Harm>(harmList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.gamioo.sandbox.proto.Skill.Harm, io.gamioo.sandbox.proto.Skill.Harm.Builder, io.gamioo.sandbox.proto.Skill.HarmOrBuilder> harmListBuilder_;

      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public java.util.List<io.gamioo.sandbox.proto.Skill.Harm> getHarmListList() {
        if (harmListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(harmList_);
        } else {
          return harmListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public int getHarmListCount() {
        if (harmListBuilder_ == null) {
          return harmList_.size();
        } else {
          return harmListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public io.gamioo.sandbox.proto.Skill.Harm getHarmList(int index) {
        if (harmListBuilder_ == null) {
          return harmList_.get(index);
        } else {
          return harmListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder setHarmList(
          int index, io.gamioo.sandbox.proto.Skill.Harm value) {
        if (harmListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHarmListIsMutable();
          harmList_.set(index, value);
          onChanged();
        } else {
          harmListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder setHarmList(
          int index, io.gamioo.sandbox.proto.Skill.Harm.Builder builderForValue) {
        if (harmListBuilder_ == null) {
          ensureHarmListIsMutable();
          harmList_.set(index, builderForValue.build());
          onChanged();
        } else {
          harmListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder addHarmList(io.gamioo.sandbox.proto.Skill.Harm value) {
        if (harmListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHarmListIsMutable();
          harmList_.add(value);
          onChanged();
        } else {
          harmListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder addHarmList(
          int index, io.gamioo.sandbox.proto.Skill.Harm value) {
        if (harmListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHarmListIsMutable();
          harmList_.add(index, value);
          onChanged();
        } else {
          harmListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder addHarmList(
          io.gamioo.sandbox.proto.Skill.Harm.Builder builderForValue) {
        if (harmListBuilder_ == null) {
          ensureHarmListIsMutable();
          harmList_.add(builderForValue.build());
          onChanged();
        } else {
          harmListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder addHarmList(
          int index, io.gamioo.sandbox.proto.Skill.Harm.Builder builderForValue) {
        if (harmListBuilder_ == null) {
          ensureHarmListIsMutable();
          harmList_.add(index, builderForValue.build());
          onChanged();
        } else {
          harmListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder addAllHarmList(
          java.lang.Iterable<? extends io.gamioo.sandbox.proto.Skill.Harm> values) {
        if (harmListBuilder_ == null) {
          ensureHarmListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, harmList_);
          onChanged();
        } else {
          harmListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder clearHarmList() {
        if (harmListBuilder_ == null) {
          harmList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          harmListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public Builder removeHarmList(int index) {
        if (harmListBuilder_ == null) {
          ensureHarmListIsMutable();
          harmList_.remove(index);
          onChanged();
        } else {
          harmListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public io.gamioo.sandbox.proto.Skill.Harm.Builder getHarmListBuilder(
          int index) {
        return internalGetHarmListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public io.gamioo.sandbox.proto.Skill.HarmOrBuilder getHarmListOrBuilder(
          int index) {
        if (harmListBuilder_ == null) {
          return harmList_.get(index);  } else {
          return harmListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public java.util.List<? extends io.gamioo.sandbox.proto.Skill.HarmOrBuilder> 
           getHarmListOrBuilderList() {
        if (harmListBuilder_ != null) {
          return harmListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(harmList_);
        }
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public io.gamioo.sandbox.proto.Skill.Harm.Builder addHarmListBuilder() {
        return internalGetHarmListFieldBuilder().addBuilder(
            io.gamioo.sandbox.proto.Skill.Harm.getDefaultInstance());
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public io.gamioo.sandbox.proto.Skill.Harm.Builder addHarmListBuilder(
          int index) {
        return internalGetHarmListFieldBuilder().addBuilder(
            index, io.gamioo.sandbox.proto.Skill.Harm.getDefaultInstance());
      }
      /**
       * <code>repeated .Harm harmList = 2;</code>
       */
      public java.util.List<io.gamioo.sandbox.proto.Skill.Harm.Builder> 
           getHarmListBuilderList() {
        return internalGetHarmListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.gamioo.sandbox.proto.Skill.Harm, io.gamioo.sandbox.proto.Skill.Harm.Builder, io.gamioo.sandbox.proto.Skill.HarmOrBuilder> 
          internalGetHarmListFieldBuilder() {
        if (harmListBuilder_ == null) {
          harmListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.gamioo.sandbox.proto.Skill.Harm, io.gamioo.sandbox.proto.Skill.Harm.Builder, io.gamioo.sandbox.proto.Skill.HarmOrBuilder>(
                  harmList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          harmList_ = null;
        }
        return harmListBuilder_;
      }

      private int index_ ;
      /**
       * <code>int32 index = 3;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 3;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {

        index_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        index_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList param1_ = emptyIntList();
      private void ensureParam1IsMutable() {
        if (!param1_.isModifiable()) {
          param1_ = makeMutableCopy(param1_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @return A list containing the param1.
       */
      public java.util.List<java.lang.Integer>
          getParam1List() {
        param1_.makeImmutable();
        return param1_;
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @return The count of param1.
       */
      public int getParam1Count() {
        return param1_.size();
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @param index The index of the element to return.
       * @return The param1 at the given index.
       */
      public int getParam1(int index) {
        return param1_.getInt(index);
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @param index The index to set the value at.
       * @param value The param1 to set.
       * @return This builder for chaining.
       */
      public Builder setParam1(
          int index, int value) {

        ensureParam1IsMutable();
        param1_.setInt(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @param value The param1 to add.
       * @return This builder for chaining.
       */
      public Builder addParam1(int value) {

        ensureParam1IsMutable();
        param1_.addInt(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @param values The param1 to add.
       * @return This builder for chaining.
       */
      public Builder addAllParam1(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParam1IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, param1_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 param1 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearParam1() {
        param1_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.lang.Object skillCategory_ = "";
      /**
       * <code>string skillCategory = 5;</code>
       * @return The skillCategory.
       */
      public java.lang.String getSkillCategory() {
        java.lang.Object ref = skillCategory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          skillCategory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string skillCategory = 5;</code>
       * @return The bytes for skillCategory.
       */
      public com.google.protobuf.ByteString
          getSkillCategoryBytes() {
        java.lang.Object ref = skillCategory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          skillCategory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string skillCategory = 5;</code>
       * @param value The skillCategory to set.
       * @return This builder for chaining.
       */
      public Builder setSkillCategory(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        skillCategory_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>string skillCategory = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillCategory() {
        skillCategory_ = getDefaultInstance().getSkillCategory();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>string skillCategory = 5;</code>
       * @param value The bytes for skillCategory to set.
       * @return This builder for chaining.
       */
      public Builder setSkillCategoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        skillCategory_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SkillFire_S2C_Msg)
    }

    // @@protoc_insertion_point(class_scope:SkillFire_S2C_Msg)
    private static final io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg();
    }

    public static io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SkillFire_S2C_Msg>
        PARSER = new com.google.protobuf.AbstractParser<SkillFire_S2C_Msg>() {
      @java.lang.Override
      public SkillFire_S2C_Msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SkillFire_S2C_Msg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SkillFire_S2C_Msg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.gamioo.sandbox.proto.Skill.SkillFire_S2C_Msg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HarmOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Harm)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float curHp = 1;</code>
     * @return The curHp.
     */
    float getCurHp();

    /**
     * <code>bool dead = 2;</code>
     * @return The dead.
     */
    boolean getDead();

    /**
     * <code>float maxHp = 3;</code>
     * @return The maxHp.
     */
    float getMaxHp();

    /**
     * <code>int32 real = 4;</code>
     * @return The real.
     */
    int getReal();

    /**
     * <code>int32 targetId = 5;</code>
     * @return The targetId.
     */
    int getTargetId();

    /**
     * <code>int32 type = 6;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    float getValue();
  }
  /**
   * <pre>
   * 伤害信息
   * </pre>
   *
   * Protobuf type {@code Harm}
   */
  public static final class Harm extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Harm)
      HarmOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 32,
        /* patch= */ 0,
        /* suffix= */ "",
        Harm.class.getName());
    }
    // Use Harm.newBuilder() to construct.
    private Harm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Harm() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gamioo.sandbox.proto.Skill.internal_static_Harm_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gamioo.sandbox.proto.Skill.internal_static_Harm_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gamioo.sandbox.proto.Skill.Harm.class, io.gamioo.sandbox.proto.Skill.Harm.Builder.class);
    }

    public static final int CURHP_FIELD_NUMBER = 1;
    private float curHp_ = 0F;
    /**
     * <code>float curHp = 1;</code>
     * @return The curHp.
     */
    @java.lang.Override
    public float getCurHp() {
      return curHp_;
    }

    public static final int DEAD_FIELD_NUMBER = 2;
    private boolean dead_ = false;
    /**
     * <code>bool dead = 2;</code>
     * @return The dead.
     */
    @java.lang.Override
    public boolean getDead() {
      return dead_;
    }

    public static final int MAXHP_FIELD_NUMBER = 3;
    private float maxHp_ = 0F;
    /**
     * <code>float maxHp = 3;</code>
     * @return The maxHp.
     */
    @java.lang.Override
    public float getMaxHp() {
      return maxHp_;
    }

    public static final int REAL_FIELD_NUMBER = 4;
    private int real_ = 0;
    /**
     * <code>int32 real = 4;</code>
     * @return The real.
     */
    @java.lang.Override
    public int getReal() {
      return real_;
    }

    public static final int TARGETID_FIELD_NUMBER = 5;
    private int targetId_ = 0;
    /**
     * <code>int32 targetId = 5;</code>
     * @return The targetId.
     */
    @java.lang.Override
    public int getTargetId() {
      return targetId_;
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private int type_ = 0;
    /**
     * <code>int32 type = 6;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int VALUE_FIELD_NUMBER = 7;
    private float value_ = 0F;
    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    @java.lang.Override
    public float getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(curHp_) != 0) {
        output.writeFloat(1, curHp_);
      }
      if (dead_ != false) {
        output.writeBool(2, dead_);
      }
      if (java.lang.Float.floatToRawIntBits(maxHp_) != 0) {
        output.writeFloat(3, maxHp_);
      }
      if (real_ != 0) {
        output.writeInt32(4, real_);
      }
      if (targetId_ != 0) {
        output.writeInt32(5, targetId_);
      }
      if (type_ != 0) {
        output.writeInt32(6, type_);
      }
      if (java.lang.Float.floatToRawIntBits(value_) != 0) {
        output.writeFloat(7, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(curHp_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, curHp_);
      }
      if (dead_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, dead_);
      }
      if (java.lang.Float.floatToRawIntBits(maxHp_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxHp_);
      }
      if (real_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, real_);
      }
      if (targetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, targetId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, type_);
      }
      if (java.lang.Float.floatToRawIntBits(value_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gamioo.sandbox.proto.Skill.Harm)) {
        return super.equals(obj);
      }
      io.gamioo.sandbox.proto.Skill.Harm other = (io.gamioo.sandbox.proto.Skill.Harm) obj;

      if (java.lang.Float.floatToIntBits(getCurHp())
          != java.lang.Float.floatToIntBits(
              other.getCurHp())) return false;
      if (getDead()
          != other.getDead()) return false;
      if (java.lang.Float.floatToIntBits(getMaxHp())
          != java.lang.Float.floatToIntBits(
              other.getMaxHp())) return false;
      if (getReal()
          != other.getReal()) return false;
      if (getTargetId()
          != other.getTargetId()) return false;
      if (getType()
          != other.getType()) return false;
      if (java.lang.Float.floatToIntBits(getValue())
          != java.lang.Float.floatToIntBits(
              other.getValue())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURHP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCurHp());
      hash = (37 * hash) + DEAD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDead());
      hash = (37 * hash) + MAXHP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxHp());
      hash = (37 * hash) + REAL_FIELD_NUMBER;
      hash = (53 * hash) + getReal();
      hash = (37 * hash) + TARGETID_FIELD_NUMBER;
      hash = (53 * hash) + getTargetId();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getValue());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.gamioo.sandbox.proto.Skill.Harm parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.gamioo.sandbox.proto.Skill.Harm parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.gamioo.sandbox.proto.Skill.Harm parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gamioo.sandbox.proto.Skill.Harm prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 伤害信息
     * </pre>
     *
     * Protobuf type {@code Harm}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Harm)
        io.gamioo.sandbox.proto.Skill.HarmOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gamioo.sandbox.proto.Skill.internal_static_Harm_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gamioo.sandbox.proto.Skill.internal_static_Harm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gamioo.sandbox.proto.Skill.Harm.class, io.gamioo.sandbox.proto.Skill.Harm.Builder.class);
      }

      // Construct using io.gamioo.sandbox.proto.Skill.Harm.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        curHp_ = 0F;
        dead_ = false;
        maxHp_ = 0F;
        real_ = 0;
        targetId_ = 0;
        type_ = 0;
        value_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gamioo.sandbox.proto.Skill.internal_static_Harm_descriptor;
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.Harm getDefaultInstanceForType() {
        return io.gamioo.sandbox.proto.Skill.Harm.getDefaultInstance();
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.Harm build() {
        io.gamioo.sandbox.proto.Skill.Harm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.gamioo.sandbox.proto.Skill.Harm buildPartial() {
        io.gamioo.sandbox.proto.Skill.Harm result = new io.gamioo.sandbox.proto.Skill.Harm(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.gamioo.sandbox.proto.Skill.Harm result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.curHp_ = curHp_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dead_ = dead_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxHp_ = maxHp_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.real_ = real_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.targetId_ = targetId_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.value_ = value_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gamioo.sandbox.proto.Skill.Harm) {
          return mergeFrom((io.gamioo.sandbox.proto.Skill.Harm)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gamioo.sandbox.proto.Skill.Harm other) {
        if (other == io.gamioo.sandbox.proto.Skill.Harm.getDefaultInstance()) return this;
        if (java.lang.Float.floatToRawIntBits(other.getCurHp()) != 0) {
          setCurHp(other.getCurHp());
        }
        if (other.getDead() != false) {
          setDead(other.getDead());
        }
        if (java.lang.Float.floatToRawIntBits(other.getMaxHp()) != 0) {
          setMaxHp(other.getMaxHp());
        }
        if (other.getReal() != 0) {
          setReal(other.getReal());
        }
        if (other.getTargetId() != 0) {
          setTargetId(other.getTargetId());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (java.lang.Float.floatToRawIntBits(other.getValue()) != 0) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                curHp_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 16: {
                dead_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 29: {
                maxHp_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 32: {
                real_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                targetId_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 61: {
                value_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float curHp_ ;
      /**
       * <code>float curHp = 1;</code>
       * @return The curHp.
       */
      @java.lang.Override
      public float getCurHp() {
        return curHp_;
      }
      /**
       * <code>float curHp = 1;</code>
       * @param value The curHp to set.
       * @return This builder for chaining.
       */
      public Builder setCurHp(float value) {

        curHp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float curHp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurHp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        curHp_ = 0F;
        onChanged();
        return this;
      }

      private boolean dead_ ;
      /**
       * <code>bool dead = 2;</code>
       * @return The dead.
       */
      @java.lang.Override
      public boolean getDead() {
        return dead_;
      }
      /**
       * <code>bool dead = 2;</code>
       * @param value The dead to set.
       * @return This builder for chaining.
       */
      public Builder setDead(boolean value) {

        dead_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool dead = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDead() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dead_ = false;
        onChanged();
        return this;
      }

      private float maxHp_ ;
      /**
       * <code>float maxHp = 3;</code>
       * @return The maxHp.
       */
      @java.lang.Override
      public float getMaxHp() {
        return maxHp_;
      }
      /**
       * <code>float maxHp = 3;</code>
       * @param value The maxHp to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHp(float value) {

        maxHp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float maxHp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxHp_ = 0F;
        onChanged();
        return this;
      }

      private int real_ ;
      /**
       * <code>int32 real = 4;</code>
       * @return The real.
       */
      @java.lang.Override
      public int getReal() {
        return real_;
      }
      /**
       * <code>int32 real = 4;</code>
       * @param value The real to set.
       * @return This builder for chaining.
       */
      public Builder setReal(int value) {

        real_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 real = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearReal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        real_ = 0;
        onChanged();
        return this;
      }

      private int targetId_ ;
      /**
       * <code>int32 targetId = 5;</code>
       * @return The targetId.
       */
      @java.lang.Override
      public int getTargetId() {
        return targetId_;
      }
      /**
       * <code>int32 targetId = 5;</code>
       * @param value The targetId to set.
       * @return This builder for chaining.
       */
      public Builder setTargetId(int value) {

        targetId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 targetId = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetId_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>int32 type = 6;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 6;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>float value = 7;</code>
       * @return The value.
       */
      @java.lang.Override
      public float getValue() {
        return value_;
      }
      /**
       * <code>float value = 7;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(float value) {

        value_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>float value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        value_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Harm)
    }

    // @@protoc_insertion_point(class_scope:Harm)
    private static final io.gamioo.sandbox.proto.Skill.Harm DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gamioo.sandbox.proto.Skill.Harm();
    }

    public static io.gamioo.sandbox.proto.Skill.Harm getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Harm>
        PARSER = new com.google.protobuf.AbstractParser<Harm>() {
      @java.lang.Override
      public Harm parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Harm> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Harm> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.gamioo.sandbox.proto.Skill.Harm getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SkillFire_S2C_Msg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SkillFire_S2C_Msg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Harm_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Harm_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013skill.proto\"v\n\021SkillFire_S2C_Msg\022\022\n\nat" +
      "tackerId\030\001 \001(\005\022\027\n\010harmList\030\002 \003(\0132\005.Harm\022" +
      "\r\n\005index\030\003 \001(\005\022\016\n\006param1\030\004 \003(\005\022\025\n\rskillC" +
      "ategory\030\005 \001(\t\"o\n\004Harm\022\r\n\005curHp\030\001 \001(\002\022\014\n\004" +
      "dead\030\002 \001(\010\022\r\n\005maxHp\030\003 \001(\002\022\014\n\004real\030\004 \001(\005\022" +
      "\020\n\010targetId\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\022\r\n\005value" +
      "\030\007 \001(\002B\031\n\027io.gamioo.sandbox.protob\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SkillFire_S2C_Msg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SkillFire_S2C_Msg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SkillFire_S2C_Msg_descriptor,
        new java.lang.String[] { "AttackerId", "HarmList", "Index", "Param1", "SkillCategory", });
    internal_static_Harm_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Harm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Harm_descriptor,
        new java.lang.String[] { "CurHp", "Dead", "MaxHp", "Real", "TargetId", "Type", "Value", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
