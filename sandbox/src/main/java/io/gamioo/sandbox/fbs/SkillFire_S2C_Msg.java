// automatically generated by the FlatBuffers compiler, do not modify

package io.gamioo.sandbox.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SkillFire_S2C_Msg extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static SkillFire_S2C_Msg getRootAsSkillFire_S2C_Msg(ByteBuffer _bb) { return getRootAsSkillFire_S2C_Msg(_bb, new SkillFire_S2C_Msg()); }
  public static SkillFire_S2C_Msg getRootAsSkillFire_S2C_Msg(ByteBuffer _bb, SkillFire_S2C_Msg obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SkillFire_S2C_Msg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long attackerId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public byte index() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String skillCategory() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer skillCategoryAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer skillCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public io.gamioo.sandbox.fbs.Harm harmList(int j) { return harmList(new io.gamioo.sandbox.fbs.Harm(), j); }
  public io.gamioo.sandbox.fbs.Harm harmList(io.gamioo.sandbox.fbs.Harm obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int harmListLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public io.gamioo.sandbox.fbs.Harm.Vector harmListVector() { return harmListVector(new io.gamioo.sandbox.fbs.Harm.Vector()); }
  public io.gamioo.sandbox.fbs.Harm.Vector harmListVector(io.gamioo.sandbox.fbs.Harm.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public int param1(int j) { int o = __offset(12); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int param1Length() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public IntVector param1Vector() { return param1Vector(new IntVector()); }
  public IntVector param1Vector(IntVector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer param1AsByteBuffer() { return __vector_as_bytebuffer(12, 4); }
  public ByteBuffer param1InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 4); }

  public static int createSkillFire_S2C_Msg(FlatBufferBuilder builder,
      long attackerId,
      byte index,
      int skillCategoryOffset,
      int harmListOffset,
      int param1Offset) {
    builder.startTable(5);
    SkillFire_S2C_Msg.addAttackerId(builder, attackerId);
    SkillFire_S2C_Msg.addParam1(builder, param1Offset);
    SkillFire_S2C_Msg.addHarmList(builder, harmListOffset);
    SkillFire_S2C_Msg.addSkillCategory(builder, skillCategoryOffset);
    SkillFire_S2C_Msg.addIndex(builder, index);
    return SkillFire_S2C_Msg.endSkillFire_S2C_Msg(builder);
  }

  public static void startSkillFire_S2C_Msg(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addAttackerId(FlatBufferBuilder builder, long attackerId) { builder.addLong(0, attackerId, 0L); }
  public static void addIndex(FlatBufferBuilder builder, byte index) { builder.addByte(1, index, 0); }
  public static void addSkillCategory(FlatBufferBuilder builder, int skillCategoryOffset) { builder.addOffset(2, skillCategoryOffset, 0); }
  public static void addHarmList(FlatBufferBuilder builder, int harmListOffset) { builder.addOffset(3, harmListOffset, 0); }
  public static int createHarmListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startHarmListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addParam1(FlatBufferBuilder builder, int param1Offset) { builder.addOffset(4, param1Offset, 0); }
  public static int createParam1Vector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startParam1Vector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSkillFire_S2C_Msg(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSkillFire_S2C_MsgBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedSkillFire_S2C_MsgBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SkillFire_S2C_Msg get(int j) { return get(new SkillFire_S2C_Msg(), j); }
    public SkillFire_S2C_Msg get(SkillFire_S2C_Msg obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

